---
- name: check for installation of Miniconda
  become: yes
  stat:
    path: "{{ miniconda_dir }}/bin/conda"
  changed_when: false
  register: miniconda_conda_binary

- when: not miniconda_conda_binary.stat.exists
  block:
    - name: download installer...
      get_url:
        url: "{{ miniconda_installer_url }}"
        checksum: "{{ miniconda_checksum }}"
        dest: "/tmp/{{ miniconda_installer_sh }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755
        timeout: "{{ miniconda_timeout_seconds }}"

    - name: install...
      become: yes
      command: |
        /tmp/{{ miniconda_installer_sh }} -b -p {{ miniconda_dir }}
      args:
        creates: "{{ miniconda_dir }}"

  always:
    - name: delete installer...
      file:
        path: "/tmp/{{ miniconda_installer_sh }}"
        state: absent

- name: link /etc/profile.d/conda.sh...
  become: yes
  file:
    src: "{{ miniconda_dir }}/etc/profile.d/conda.sh"
    dest: "/etc/profile.d/conda.sh"
    state: link

- name: link /etc/profile.d/conda.csh...
  become: yes
  file:
    src: "{{ miniconda_dir }}/etc/profile.d/conda.csh"
    dest: "/etc/profile.d/conda.csh"
    state: link

- name: update conda pkgs...
  when: miniconda_pkg_update
  become: yes
  shell: bash -lc "conda update -y --all"
  register: conda_update_pkgs
  changed_when: "conda_update_pkgs.stdout is not search('All requested packages already installed')"
  failed_when: "conda_update_pkgs.stderr is search('conda: command not found')"

- name: install additional packages...
  become: yes
  conda:
    name: "{{ item }}"
    state: present
    executable: "{{ miniconda_conda_bin }}"
  register: conda_install_result
  changed_when: conda_install_result.stdout is not search("All requested packages already installed")
  with_items: "{{ miniconda_install_packages }}"
...
