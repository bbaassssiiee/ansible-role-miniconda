---
- name: resolve platform specific vars
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family }}.yml"
        - "default.yml"
      paths:
        - "{{ role_path }}/vars"

- name: check for installation of Miniconda
  become: yes
  stat:
    path: "{{ miniconda_dir }}/bin/conda"
  changed_when: false
  register: miniconda_conda_binary

- when: not miniconda_conda_binary.stat.exists
  block:
    - name: download installer...
      become: yes
      become_user: root
      get_url:
        url: "{{ miniconda_installer_url }}"
        dest: "/tmp/{{ miniconda_installer_sh }}"
        timeout: "{{ miniconda_timeout_seconds }}"
        checksum: "{{ miniconda_checksum }}"
        mode: 0755

    - name: install...
      become: yes
      command: "/tmp/{{ miniconda_installer_sh }} -b -p {{ miniconda_dir }}"
      args:
        creates: "{{ miniconda_dir }}"

  always:
    - name: delete installer...
      become: yes
      file:
        path: "/tmp/{{ miniconda_installer_sh }}"
        state: absent

- name: link /etc/profile.d/conda.sh...
  become: yes
  file:
    src: "{{ miniconda_dir }}/etc/profile.d/conda.sh"
    dest: "/etc/profile.d/conda.sh"
    state: link

- name: link /etc/profile.d/conda.csh...
  become: yes
  file:
    src: "{{ miniconda_dir }}/etc/profile.d/conda.csh"
    dest: "/etc/profile.d/conda.csh"
    state: link

- name: update conda pkgs...
  become: yes
  when: miniconda_pkg_update
  command: "{{ miniconda_dir }}/bin/conda update -n base -y --all"

- name: install additional packages
  become: yes
  conda:
    name: "{{ item }}"
    state: present
    executable: "{{ miniconda_conda_bin }}"
  register: conda_install_result
  changed_when: not (conda_install_result.stdout | search("All requested packages already installed"))
  with_items: "{{ miniconda_install_packages }}"
...
